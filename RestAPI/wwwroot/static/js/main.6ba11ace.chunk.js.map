{"version":3,"sources":["Services/reviewServices.js","Components/Review.js","Components/MovieDetails.js","Services/movieServices.js","Components/ResultCard.js","Components/SearchResults.js","Components/Navbar.js","Components/Home.js","App.js","index.js"],"names":["addReview","reviewDetails","movieId","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","Review","info","className","author","allowHalf","defaultValue","rating","disabled","description","MovieDetails","useState","movieInfo","setMovieInfo","reviews","setReviews","modalVisible","setModalVisible","useParams","useEffect","res","json","getMovieDetails","details","getReviews","sort","a","b","reviewId","submitReview","values","parseInt","newReview","length","concat","message","success","catch","error","alt","src","poster_Path","title","tagline","overview","style","backgroundColor","type","onClick","map","review","key","visible","onCancel","footer","labelCol","span","wrapperCol","name","onFinish","Item","label","rules","required","TextArea","autoSize","minRows","maxRows","offset","htmlType","ResultCard","to","id","release_Date","SearchResults","results","setResults","query","movieSearch","sResults","result","size","Navbar","history","useHistory","location","pathname","Search","placeholder","onSearch","value","replace","width","margin","Home","enterButton","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ba11ace.chunk.js","sourcesContent":["export const getReviews = (movieId) => {\r\n  return fetch(`/api/reviews/${movieId}`).then((res) => res.json());\r\n};\r\n\r\nexport const addReview = (reviewDetails, movieId) => {\r\n  return fetch('/api/reviews', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ movieId, ...reviewDetails }),\r\n  }).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Failed to add review');\r\n    }\r\n  });\r\n};\r\n","import React from 'react';\r\nimport './Review.css';\r\nimport { Rate } from 'antd';\r\n\r\nconst Review = ({ info }) => {\r\n  return (\r\n    <div className=\"review\">\r\n      <h3>Review by {info.author}</h3>\r\n      <Rate allowHalf defaultValue={info.rating} disabled className=\"rating\" />\r\n      <div className=\"desc\">\"{info.description}\"</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getMovieDetails } from '../Services/movieServices';\r\nimport { getReviews } from '../Services/reviewServices';\r\nimport './MovieDetails.css';\r\nimport Review from './Review';\r\nimport { Button, Divider, Modal, Form, Input, Rate, message } from 'antd';\r\nimport { addReview } from '../Services/reviewServices';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MovieDetails = () => {\r\n  const [movieInfo, setMovieInfo] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  // Fetch movie info and reviews\r\n  useEffect(() => {\r\n    getMovieDetails(movieId).then((details) => {\r\n      setMovieInfo(details);\r\n    });\r\n\r\n    getReviews(movieId).then((reviews) => {\r\n      setReviews(reviews.sort((a, b) => b.reviewId - a.reviewId));\r\n    });\r\n  }, [movieId]);\r\n\r\n  // Submit a new user review\r\n  const submitReview = async (values) => {\r\n    addReview(values, parseInt(movieId))\r\n      .then(() => {\r\n        setModalVisible(false);\r\n        const newReview = {\r\n          ...values,\r\n          reviewId: reviews.length > 0 ? reviews[0].reviewId + 1 : 1,\r\n        };\r\n        setReviews([newReview].concat(reviews));\r\n        message.success('Review added!');\r\n      })\r\n      .catch((error) => {\r\n        message.error('Failed to add review');\r\n      });\r\n  };\r\n\r\n  // render page contents once data has been fetched from API\r\n  if (movieInfo && reviews) {\r\n    return (\r\n      <div className=\"details\">\r\n        <div className=\"description\">\r\n          <img\r\n            alt=\"casino royale poster\"\r\n            src={`https://image.tmdb.org/t/p/w342/${movieInfo.poster_Path}`}\r\n          />\r\n          <div className=\"info\">\r\n            <h1>{movieInfo.title}</h1>\r\n            <div className=\"tag\">{movieInfo.tagline}</div>\r\n            <div className=\"plot\">{movieInfo.overview}</div>\r\n          </div>\r\n        </div>\r\n        <Divider style={{ backgroundColor: '#9ab' }} />\r\n        <div className=\"reviews\">\r\n          <div className=\"reviews-header\">\r\n            <h2>Reviews</h2>\r\n            <Button type=\"primary\" onClick={() => setModalVisible(true)}>\r\n              Add Review\r\n            </Button>\r\n          </div>\r\n          {reviews.length > 0 ? (\r\n            reviews.map((review) => (\r\n              <Review info={review} key={review.reviewId} />\r\n            ))\r\n          ) : (\r\n            <div>No reviews added yet</div>\r\n          )}\r\n        </div>\r\n        <Modal\r\n          visible={modalVisible}\r\n          onCancel={() => setModalVisible(false)}\r\n          title=\"Add a review\"\r\n          footer={null}\r\n        >\r\n          <Form\r\n            labelCol={{ span: 5 }}\r\n            wrapperCol={{ span: 19 }}\r\n            name=\"addReview\"\r\n            onFinish={submitReview}\r\n          >\r\n            <Form.Item\r\n              label=\"Your name\"\r\n              name=\"author\"\r\n              rules={[{ required: true, message: 'Please enter a username' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Rating\"\r\n              name=\"rating\"\r\n              rules={[{ required: true, message: 'Please select a rating' }]}\r\n            >\r\n              <Rate allowHalf />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Details\"\r\n              name=\"description\"\r\n              rules={[{ required: true, message: 'Please enter your review' }]}\r\n            >\r\n              <Input.TextArea autoSize={{ minRows: 5, maxRows: 15 }} />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 5, span: 19 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit Review\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport default MovieDetails;\r\n","export const getMovieDetails = (movieId) => {\r\n  return fetch(`/api/movies/${movieId}`).then((res) => res.json());\r\n};\r\n\r\nexport const movieSearch = (query) => {\r\n  return fetch(`/api/movies/search/${query}`).then((res) => res.json());\r\n};\r\n","import React from 'react';\r\nimport './ResultCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ResultCard = ({ details }) => {\r\n  return (\r\n    <div className=\"result-card\">\r\n      <Link to={`/movies/${details.id}`}>\r\n        {details.poster_Path && (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w342/${details.poster_Path}`}\r\n            alt={details.title}\r\n          />\r\n        )}\r\n        <h2>{details.title}</h2>\r\n        <div className=\"release-date\">{details.release_Date}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { movieSearch } from '../Services/movieServices';\r\nimport { useParams } from 'react-router-dom';\r\nimport ResultCard from './ResultCard';\r\nimport './SearchResults.css';\r\nimport { Spin } from 'antd';\r\n\r\nconst SearchResults = () => {\r\n  const [results, setResults] = useState(null);\r\n\r\n  const { query } = useParams();\r\n\r\n  useEffect(() => {\r\n    movieSearch(query).then((sResults) => {\r\n      setResults(sResults.results);\r\n    });\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <h1>Results for \"{query}\"</h1>\r\n      <div className=\"results\">\r\n        {results ? (\r\n          results.map((result) => (\r\n            <ResultCard details={result} key={result.id} />\r\n          ))\r\n        ) : (\r\n          <Spin size=\"large\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from 'react';\r\nimport './Navbar.css';\r\nimport { Input, Divider } from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const handleSearch = (value) => {\r\n    if (value) {\r\n      history.replace(`/search/${value}`);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <Link to=\"/\">\r\n          <div className=\"nav-logo\">FILM REVIEWS</div>\r\n        </Link>\r\n        {history.location.pathname === '/' || (\r\n          <div className=\"nav-search\">\r\n            <Input.Search\r\n              placeholder=\"Search for a film\"\r\n              onSearch={handleSearch}\r\n              style={{ width: 275 }}\r\n            />\r\n          </div>\r\n        )}\r\n      </nav>\r\n      <Divider style={{ margin: 0 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const handleSearch = value => {\r\n    if (value) {\r\n      history.replace(`/search/${value}`);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Find and review your favorite films</h1>\r\n      <div className=\"home-search\">\r\n        <Input.Search\r\n          placeholder=\"Search for a film...\"\r\n          enterButton\r\n          size=\"large\"\r\n          onSearch={handleSearch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport MovieDetails from './Components/MovieDetails';\nimport SearchResults from './Components/SearchResults';\nimport Navbar from './Components/Navbar';\nimport Home from './Components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/search/:query\">\n            <SearchResults />\n          </Route>\n          <Route exact path=\"/movies/:movieId\">\n            <MovieDetails />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}